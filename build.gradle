import groovy.xml.XmlUtil

group 'com.inno'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.0.0-M1'
}

def dependsOnModules = [":controller:war", ":auth:war", ":director:war", ":organizer:war", ":student:war"]
dependsOnModules.each {
    war.dependsOn(it)
}

war {
    println '!'
    from 'controller/build/exploded', 'auth/build/exploded', 'director/build/exploded', 'organizer/build/exploded', 'student/build/exploded'
    rootSpec.exclude("/WEB-INF/web.xml")
    webXml = file('web.xml')
    archiveName = 'SM.war'
}

war.doLast {
    ant.unzip(src: war.archivePath, dest: "$buildDir/exploded")
    ant.delete(file: 'web.xml')
}

FilenameFilter filter = new FilenameFilter() {
    @Override
    boolean accept(File dir, String name) {
        if ("out".equals(name) || "build".equals("name")) {
            return true
        }
    }
}
task cleanSubProjects() {
    doLast {
        def rootOut = rootProject.projectDir.listFiles(filter)
        rootOut.each {
            delete(it)
        }
        subprojects.each {
            def list = it.projectDir.listFiles(filter)
            list.each {
                delete(it)
            }
        }
    }
}
clean.dependsOn cleanSubProjects

task mergeWebXml() {
    doFirst {
        println('Merge webXmls')
        def header = '''<?xml version="1.0" encoding="UTF-8"?>
                    <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                     xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
                     version="3.1">'''
        def footer = '''</web-app>'''
        def resultPath = rootProject.projectDir.toString() + File.separator + "web.xml"
        println('Result webxml path: ' + resultPath)
        def writer = new OutputStreamWriter(new FileOutputStream(resultPath), 'utf-8')
        writer << header
        subprojects.each {
            def path = it.projectDir.toString() + String.join(File.separator, "", "src", "main", "webapp", "WEB-INF", "web.xml")
            println path
            def webXmlFile = new File(path)
            if (webXmlFile.exists()) {
                def xmlFile = new XmlParser().parse(webXmlFile)
                xmlFile.each { node ->

                    println(node.value())

                    def val = XmlUtil.serialize(node)
                    writer << val.replace('<?xml version="1.0" encoding="UTF-8"?>', '')
                }
            }
        }
        writer << footer
        writer.flush()
        writer.close()
    }
}
tasks.war.dependsOn(mergeWebXml)
